/**
 * Cokomo Public Api
 * ## ðŸ‘‰ [Please see the CoKoMo documentation for more information.](https://cokomo-it.de/docs/start/api/documentation/)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CompetenceBase from './model/CompetenceBase';
import CompetenceBaseType from './model/CompetenceBaseType';
import CompetenceLevel from './model/CompetenceLevel';
import EdgeType from './model/EdgeType';
import LearningGoal from './model/LearningGoal';
import Metamodel from './model/Metamodel';
import Neighbour from './model/Neighbour';
import NeighbourEdge from './model/NeighbourEdge';
import CompetenceBaseApi from './api/CompetenceBaseApi';
import LearningGoalApi from './api/LearningGoalApi';
import MetamodelApi from './api/MetamodelApi';


/**
* JavaScript client for the CoKoMo API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CoKoMoApi = require('index'); // See note below*.
* var xxxSvc = new CoKoMoApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CoKoMoApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CoKoMoApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CoKoMoApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CompetenceBase model constructor.
     * @property {module:model/CompetenceBase}
     */
    CompetenceBase,

    /**
     * The CompetenceBaseType model constructor.
     * @property {module:model/CompetenceBaseType}
     */
    CompetenceBaseType,

    /**
     * The CompetenceLevel model constructor.
     * @property {module:model/CompetenceLevel}
     */
    CompetenceLevel,

    /**
     * The EdgeType model constructor.
     * @property {module:model/EdgeType}
     */
    EdgeType,

    /**
     * The LearningGoal model constructor.
     * @property {module:model/LearningGoal}
     */
    LearningGoal,

    /**
     * The Metamodel model constructor.
     * @property {module:model/Metamodel}
     */
    Metamodel,

    /**
     * The Neighbour model constructor.
     * @property {module:model/Neighbour}
     */
    Neighbour,

    /**
     * The NeighbourEdge model constructor.
     * @property {module:model/NeighbourEdge}
     */
    NeighbourEdge,

    /**
    * The CompetenceBaseApi service constructor.
    * @property {module:api/CompetenceBaseApi}
    */
    CompetenceBaseApi,

    /**
    * The LearningGoalApi service constructor.
    * @property {module:api/LearningGoalApi}
    */
    LearningGoalApi,

    /**
    * The MetamodelApi service constructor.
    * @property {module:api/MetamodelApi}
    */
    MetamodelApi
};
